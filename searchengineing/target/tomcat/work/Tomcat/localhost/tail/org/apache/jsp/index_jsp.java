/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2015-05-24 12:51:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE HTML>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<title>login</title>\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n");
      out.write("<!-- 引入 Bootstrap -->\n");
      out.write("<link href=\"resource/bootstrap/css/bootstrap.min.css\" rel=\"stylesheet\">\n");
      out.write("\n");
      out.write("<!-- HTML5 Shim 和 Respond.js 用于让 IE8 支持 HTML5元素和媒体查询 -->\n");
      out.write("<!-- 注意： 如果通过 file://  引入 Respond.js 文件，则该文件无法起效果 -->\n");
      out.write("<!--[if lt IE 9]>\n");
      out.write("         <script src=\"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js\"></script>\n");
      out.write("         <script src=\"https://oss.maxcdn.com/libs/respond.js/1.3.0/respond.min.js\"></script>\n");
      out.write("      <![endif]-->\n");
      out.write("<style type=\"text/css\">\n");
      out.write("div.panel, p.flip {\n");
      out.write("\tmargin: 0px;\n");
      out.write("\tpadding: 5px;\n");
      out.write("\ttext-align: center;\n");
      out.write("\tbackground: #e5eecc;\n");
      out.write("\tborder: solid 1px #c3c3c3;\n");
      out.write("}\n");
      out.write("\n");
      out.write("div.panel {\n");
      out.write("\theight: 120px;\n");
      out.write("\tdisplay: none;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\t<p>\n");
      out.write("\t\t鼠标指针位于： <span></span>\n");
      out.write("\t</p>\n");
      out.write("\t<table class=\"table table-bordered\">\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>a</td>\n");
      out.write("\t\t\t<td>a</td>\n");
      out.write("\t\t\t<td>a</td>\n");
      out.write("\t\t\t<td>a</td>\n");
      out.write("\t\t\t<td>a</td>\n");
      out.write("\t\t\t<td>a</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<td>b</td>\n");
      out.write("\t\t<td>b</td>\n");
      out.write("\t\t<td>b</td>\n");
      out.write("\t\t<td>b</td>\n");
      out.write("\t\t<td>b</td>\n");
      out.write("\t\t<td>b</td>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>c</td>\n");
      out.write("\t\t\t<td>c</td>\n");
      out.write("\t\t\t<td>c</td>\n");
      out.write("\t\t\t<td>c</td>\n");
      out.write("\t\t\t<td>c</td>\n");
      out.write("\t\t\t<td>c</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>d</td>\n");
      out.write("\t\t\t<td>d</td>\n");
      out.write("\t\t\t<td>d</td>\n");
      out.write("\t\t\t<td>d</td>\n");
      out.write("\t\t\t<td>d</td>\n");
      out.write("\t\t\t<td>d</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<tr>\n");
      out.write("\t\t\t<td>e</td>\n");
      out.write("\t\t\t<td>e</td>\n");
      out.write("\t\t\t<td>e</td>\n");
      out.write("\t\t\t<td>e</td>\n");
      out.write("\t\t\t<td>e</td>\n");
      out.write("\t\t\t<td>e</td>\n");
      out.write("\t\t</tr>\n");
      out.write("\t\t<br>\n");
      out.write("\t</table>\n");
      out.write("\t<div class=\"panel\">\n");
      out.write("\t\t<p>W3School web</p>\n");
      out.write("\t\t<p>W3School,you are right</p>\n");
      out.write("\t</div>\n");
      out.write("\t<p class=\"flip\">click</p>\n");
      out.write("\n");
      out.write("\t<hr>\n");
      out.write("\t<button id=\"bt01\">动</button>\n");
      out.write("\t<button id=\"bt02\">大</button>\n");
      out.write("\t<button id=\"bt03\">小</button>\n");
      out.write("\t<button id=\"bt04\">变</button>\n");
      out.write("\t<button id=\"bt05\">联动</button>\t\n");
      out.write("\t<button id=\"bt06\">浏览器尺寸</button>\t\n");
      out.write("\t<button id=\"bt07\">设置尺寸</button>\t\n");
      out.write("\t<!-- \t默认情况下，所有 HTML 元素的位置都是静态的，并且无法移动。如需对位置进行操作，记得首先把元素的 CSS position 属性设置为 relative、fixed 或 absolute。 -->\n");
      out.write("\t<div id=\"auto\"\n");
      out.write("\t\tstyle=\"background: #98bf21; height: 100px; width: 100px; position: absolute;\"></div>\n");
      out.write("\n");
      out.write("\n");
      out.write("\t<!-- jQuery (Bootstrap 的 JavaScript 插件需要引入 jQuery) -->\n");
      out.write("\t<script src=\"resource/jquery/jquery.min.js\"></script>\n");
      out.write("\t<script type=\"text/javascript\">\n");
      out.write("\t\t$(document).ready(function() {\n");
      out.write("\t\t\t\n");
      out.write("\t\t\t$(\".flip\").click(function() {\n");
      out.write("\t\t\t\t$(\".panel\").slideToggle(2000, function() {\n");
      out.write("\t\t\t\t\talert(\"i am collback\")\n");
      out.write("\t\t\t\t}); //【slide滑动】   功能： 藏显示切换    /*slideup 向上滑动  slidedown 向下  */\n");
      out.write("\t\t\t\t\t//$(\".panel\").fadeToggle(\"slow\"); //【fade 褪色】   功能：淡入淡出切换   /* fadein 淡入 fadeout 淡出   */\n");
      out.write("\n");
      out.write("\t\t\t\t/*fadeIn等函数(speed,callback);\t\t\t\t\t\n");
      out.write("\t\t\t\t\t可选的 speed 参数规定效果的时长。它可以取以下值：\"slow\"、\"fast\" 或毫秒.\n");
      out.write("\t\t\t\t\t可选的 callback 参数是 fading 完成后所执行的函数名称。\t \n");
      out.write("\t\t\t\t\t###Callback 函数在当前动画 100% 完成之后执行。\n");
      out.write("\t\t\t\t\t【animate 使活泼  使有生气；使活泼；鼓舞；推动】\n");
      out.write("\t\t\t\t */\n");
      out.write("\t\t\t});\n");
      out.write("\n");
      out.write("\t\t\t$(document).mousemove(function(e) {\n");
      out.write("\t\t\t\t$(\"span\").text(\"X: \" + e.pageX + \"    \" + \"Y:  \" + e.pageY);\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t$(\"#bt01\").click(function() {\n");
      out.write("\t\t\t\t//$(selector).animate({params},speed,callback);\n");
      out.write("\t\t\t\t//必需的 params 参数定义形成动画的 CSS 属性。\n");
      out.write("\t\t\t\t//可选的 speed 参数规定效果的时长。它可以取以下值：\"slow\"、\"fast\" 或毫秒。\n");
      out.write("\t\t\t\t//可选的 callback 参数是动画完成后所执行的函数名称。\n");
      out.write("\t\t\t\t$(\"#auto\").animate({\n");
      out.write("\t\t\t\t\tleft : '+=250px'\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t$(\"#bt02\").click(function() {\n");
      out.write("\t\t\t\t$(\"#auto\").animate({\n");
      out.write("\t\t\t\t\t//left:'250px',\n");
      out.write("\t\t\t\t\t//height:'+=150px',\n");
      out.write("\t\t\t\t\twidth : '+=150px'\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t$(\"#bt03\").click(function() {\n");
      out.write("\t\t\t\t$(\"#auto\").animate({\n");
      out.write("\t\t\t\t\t//left:'250px',\n");
      out.write("\t\t\t\t\t//height:'+=150px',\n");
      out.write("\t\t\t\t\twidth : '-=150px'\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t$(\"#bt04\").click(function() {\n");
      out.write("\t\t\t\tvar div = $(\"#auto\");\n");
      out.write("\t\t\t\tdiv.animate({\n");
      out.write("\t\t\t\t\theight : '300px',\n");
      out.write("\t\t\t\t\topacity : '0.4'\n");
      out.write("\t\t\t\t}, \"slow\");\n");
      out.write("\t\t\t\tdiv.animate({\n");
      out.write("\t\t\t\t\twidth : '300px',\n");
      out.write("\t\t\t\t\topacity : '0.8'\n");
      out.write("\t\t\t\t}, \"slow\");\n");
      out.write("\t\t\t\tdiv.animate({\n");
      out.write("\t\t\t\t\theight : '100px',\n");
      out.write("\t\t\t\t\topacity : '0.4'\n");
      out.write("\t\t\t\t}, \"slow\");\n");
      out.write("\t\t\t\tdiv.animate({\n");
      out.write("\t\t\t\t\twidth : '100px',\n");
      out.write("\t\t\t\t\topacity : '0.8'\n");
      out.write("\t\t\t\t}, \"slow\");\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t$(\"#bt05\").click(function() {\n");
      out.write("\t\t\t\t$(\"#auto\").css(\"background\",\"red\").slideUp(2000).slideDown(2000);\n");
      out.write("\t\t\t});\n");
      out.write("\t\t\t$(\"#bt06\").click(function(){ \n");
      out.write("\t\t\t\t  var txt=\"\";\n");
      out.write("\t\t\t\t  txt+=$(document).width();\n");
      out.write("\t\t\t\t  txt+=\"x\" + $(document).height();\n");
      out.write("\t\t\t\t  alert(txt);\n");
      out.write("\t\t\t\t});\n");
      out.write("\t\t\t$(\"#bt07\").click(function(){ \n");
      out.write("\t\t\t\t $(\"#auto\").width(500).height(300);\n");
      out.write("\t\t\t\t});\t\t\t\n");
      out.write("\t\t});\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\t// \t\t$(selector).stop(stopAll,goToEnd);\n");
      out.write("\t\t// \t\t可选的 stopAll 参数规定是否应该清除动画队列。默认是 false，即仅停止活动的动画，允许任何排入队列的动画向后执行。\n");
      out.write("\t\t// \t\t可选的 goToEnd 参数规定是否立即完成当前动画。默认是 false。\n");
      out.write("\t</script>\n");
      out.write("\t<!-- 包括所有已编译的插件 -->\n");
      out.write("\t<script src=\"resource/bootstrap/js/bootstrap.min.js\"></script>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
