/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2015-05-13 08:46:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.pages.sys;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class web_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<title>WebSocket/SockJS Echo Sample (Adapted from Tomcat's echo\r\n");
      out.write("\tsample)</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("#connect-container {\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\twidth: 400px\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#connect-container div {\r\n");
      out.write("\tpadding: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#console-container {\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("\tmargin-left: 15px;\r\n");
      out.write("\twidth: 400px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#console {\r\n");
      out.write("\tborder: 1px solid #CCCCCC;\r\n");
      out.write("\tborder-right-color: #999999;\r\n");
      out.write("\tborder-bottom-color: #999999;\r\n");
      out.write("\theight: 170px;\r\n");
      out.write("\toverflow-y: scroll;\r\n");
      out.write("\tpadding: 5px;\r\n");
      out.write("\twidth: 100%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#console p {\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script src=\"http://cdn.sockjs.org/sockjs-0.3.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">  \r\n");
      out.write("        var ws = null;  \r\n");
      out.write("        var url = null;  \r\n");
      out.write("        var transports = [];  \r\n");
      out.write("  \r\n");
      out.write("        function setConnected(connected) {  \r\n");
      out.write("            document.getElementById('connect').disabled = connected;  \r\n");
      out.write("            document.getElementById('disconnect').disabled = !connected;  \r\n");
      out.write("            document.getElementById('echo').disabled = !connected;  \r\n");
      out.write("        }  \r\n");
      out.write("  \r\n");
      out.write("        function connect() {  \r\n");
      out.write("            alert(\"url:\"+url);  \r\n");
      out.write("            if (!url) {  \r\n");
      out.write("                alert('Select whether to use W3C WebSocket or SockJS');  \r\n");
      out.write("                return;  \r\n");
      out.write("            }  \r\n");
      out.write("  \r\n");
      out.write("            ws = (url.indexOf('sockjs') != -1) ?   \r\n");
      out.write("                new SockJS(url, undefined, {protocols_whitelist: transports}) : new WebSocket(url);  \r\n");
      out.write("  \r\n");
      out.write("            ws.onopen = function () {  \r\n");
      out.write("                setConnected(true);  \r\n");
      out.write("                log('Info: connection opened.');  \r\n");
      out.write("            };  \r\n");
      out.write("            ws.onmessage = function (event) {  \r\n");
      out.write("                log('Received: ' + event.data);  \r\n");
      out.write("            };  \r\n");
      out.write("            ws.onclose = function (event) {  \r\n");
      out.write("                setConnected(false);  \r\n");
      out.write("                log('Info: connection closed.');  \r\n");
      out.write("                log(event);  \r\n");
      out.write("            };  \r\n");
      out.write("        }  \r\n");
      out.write("  \r\n");
      out.write("        function disconnect() {  \r\n");
      out.write("            if (ws != null) {  \r\n");
      out.write("                ws.close();  \r\n");
      out.write("                ws = null;  \r\n");
      out.write("            }  \r\n");
      out.write("            setConnected(false);  \r\n");
      out.write("        }  \r\n");
      out.write("  \r\n");
      out.write("        function echo() {  \r\n");
      out.write("            if (ws != null) {  \r\n");
      out.write("                var message = document.getElementById('message').value;  \r\n");
      out.write("                log('Sent: ' + message);  \r\n");
      out.write("                ws.send(message);  \r\n");
      out.write("            } else {  \r\n");
      out.write("                alert('connection not established, please connect.');  \r\n");
      out.write("            }  \r\n");
      out.write("        }  \r\n");
      out.write("  \r\n");
      out.write("        function updateUrl(urlPath) {  \r\n");
      out.write("            if (urlPath.indexOf('sockjs') != -1) {  \r\n");
      out.write("                url = urlPath;  \r\n");
      out.write("                document.getElementById('sockJsTransportSelect').style.visibility = 'visible';  \r\n");
      out.write("            }  \r\n");
      out.write("            else {  \r\n");
      out.write("              if (window.location.protocol == 'http:') {  \r\n");
      out.write("                  url = 'ws://' + window.location.host + urlPath;  \r\n");
      out.write("              } else {  \r\n");
      out.write("                  url = 'wss://' + window.location.host + urlPath;  \r\n");
      out.write("              }  \r\n");
      out.write("              document.getElementById('sockJsTransportSelect').style.visibility = 'hidden';  \r\n");
      out.write("            }  \r\n");
      out.write("        }  \r\n");
      out.write("  \r\n");
      out.write("        function updateTransport(transport) {  \r\n");
      out.write("            alert(transport);  \r\n");
      out.write("          transports = (transport == 'all') ?  [] : [transport];  \r\n");
      out.write("        }  \r\n");
      out.write("          \r\n");
      out.write("        function log(message) {  \r\n");
      out.write("            var console = document.getElementById('console');  \r\n");
      out.write("            var p = document.createElement('p');  \r\n");
      out.write("            p.style.wordWrap = 'break-word';  \r\n");
      out.write("            p.appendChild(document.createTextNode(message));  \r\n");
      out.write("            console.appendChild(p);  \r\n");
      out.write("            while (console.childNodes.length > 25) {  \r\n");
      out.write("                console.removeChild(console.firstChild);  \r\n");
      out.write("            }  \r\n");
      out.write("            console.scrollTop = console.scrollHeight;  \r\n");
      out.write("        }  \r\n");
      out.write("    </script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<noscript>\r\n");
      out.write("\t\t<h2 style=\"color: #ff0000\">Seems your browser doesn't support\r\n");
      out.write("\t\t\tJavascript! Websockets rely on Javascript being enabled. Please\r\n");
      out.write("\t\t\tenable Javascript and reload this page!</h2>\r\n");
      out.write("\t</noscript>\r\n");
      out.write("\t<div>\r\n");
      out.write("\t\t<div id=\"connect-container\">\r\n");
      out.write("\t\t\t<input id=\"radio1\" type=\"radio\" name=\"group1\"\r\n");
      out.write("\t\t\t\tonclick=\"updateUrl(''/tail/websocket');\">\r\n");
      out.write("\t\t\t<label for=\"radio1\">W3C WebSocket</label> <br> <input\r\n");
      out.write("\t\t\t\tid=\"radio2\" type=\"radio\" name=\"group1\"\r\n");
      out.write("\t\t\t\tonclick=\"updateUrl('/tail/websocket');\">\r\n");
      out.write("\t\t\t<label for=\"radio2\">SockJS</label>\r\n");
      out.write("\t\t\t<div id=\"sockJsTransportSelect\" style=\"visibility: hidden;\">\r\n");
      out.write("\t\t\t\t<span>SockJS transport:</span> <select\r\n");
      out.write("\t\t\t\t\tonchange=\"updateTransport(this.value)\">\r\n");
      out.write("\t\t\t\t\t<option value=\"all\">all</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"websocket\">websocket</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"xhr-polling\">xhr-polling</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"jsonp-polling\">jsonp-polling</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"xhr-streaming\">xhr-streaming</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"iframe-eventsource\">iframe-eventsource</option>\r\n");
      out.write("\t\t\t\t\t<option value=\"iframe-htmlfile\">iframe-htmlfile</option>\r\n");
      out.write("\t\t\t\t</select>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<button id=\"connect\" onclick=\"connect();\">Connect</button>\r\n");
      out.write("\t\t\t\t<button id=\"disconnect\" disabled=\"disabled\" onclick=\"disconnect();\">Disconnect</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<textarea id=\"message\" style=\"width: 350px\">Here is a message!</textarea>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<button id=\"echo\" onclick=\"echo();\" disabled=\"disabled\">Echo\r\n");
      out.write("\t\t\t\t\tmessage</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div id=\"console-container\">\r\n");
      out.write("\t\t\t<div id=\"console\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
